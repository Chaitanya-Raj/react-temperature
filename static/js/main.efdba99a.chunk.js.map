{"version":3,"sources":["Calculator.js","index.js"],"names":["scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","TemperatureInput","props","handleChange","bind","e","this","onTemperatureChange","target","value","scale","onChange","React","Component","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAGMA,G,MAAa,CACjBC,EAAG,UACHC,EAAG,eAGL,SAASC,EAAUC,GACjB,OAA4B,GAAnBA,EAAa,IAAW,EAGnC,SAASC,EAAaC,GACpB,OAAkB,EAAVA,EAAe,EAAI,GAG7B,SAASC,EAAWC,EAAaC,GAC/B,IAAMC,EAAQC,WAAWH,GACzB,GAAII,OAAOC,MAAMH,GACf,MAAO,GAET,IAAMI,EAASL,EAAQC,GAEvB,OADgBK,KAAKC,MAAe,IAATF,GAAiB,KAC7BG,W,IAGXC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,yDAKNC,GACXC,KAAKJ,MAAMK,oBAAoBF,EAAEG,OAAOC,S,+BAIxC,IAAMlB,EAAce,KAAKJ,MAAMX,YACzBmB,EAAQJ,KAAKJ,MAAMQ,MACzB,OACE,kCACE,wDAA8B3B,EAAW2B,GAAzC,KACA,2BAAOD,MAAOlB,EAAaoB,SAAUL,KAAKH,oB,GAhBnBS,IAAMC,WA+DtBC,E,kDAxCb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,oBAAsB,EAAKA,oBAAoBX,KAAzB,gBAC3B,EAAKY,uBAAyB,EAAKA,uBAAuBZ,KAA5B,gBAC9B,EAAKa,MAAQ,CAAE1B,YAAa,GAAImB,MAAO,KAJtB,E,gEAOCnB,GAClBe,KAAKY,SAAS,CAAER,MAAO,IAAKnB,kB,6CAGPA,GACrBe,KAAKY,SAAS,CAAER,MAAO,IAAKnB,kB,+BAI5B,IAAMmB,EAAQJ,KAAKW,MAAMP,MACnBnB,EAAce,KAAKW,MAAM1B,YACzBF,EACM,MAAVqB,EAAgBpB,EAAWC,EAAaL,GAAaK,EACjDJ,EACM,MAAVuB,EAAgBpB,EAAWC,EAAaH,GAAgBG,EAE1D,OACE,6BACE,kBAAC,EAAD,CACEmB,MAAM,IACNnB,YAAaF,EACbkB,oBAAqBD,KAAKS,sBAE5B,kBAAC,EAAD,CACEL,MAAM,IACNnB,YAAaJ,EACboB,oBAAqBD,KAAKU,8B,GAlCXJ,IAAMC,WC3C/BM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.efdba99a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Calculator.css\";\n\nconst scaleNames = {\n  c: \"Celsius\",\n  f: \"Fahrenheit\",\n};\n\nfunction toCelsius(fahrenheit) {\n  return ((fahrenheit - 32) * 5) / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9) / 5 + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return \"\";\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input value={temperature} onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = { temperature: \"\", scale: \"c\" };\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({ scale: \"c\", temperature });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({ scale: \"f\", temperature });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius =\n      scale === \"f\" ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit =\n      scale === \"c\" ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      <div>\n        <TemperatureInput\n          scale=\"c\"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange}\n        />\n        <TemperatureInput\n          scale=\"f\"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Calculator from \"./Calculator\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}